{"version":3,"sources":["utils/calculateResult.js","actions/index.js","utils/actionTypes.js","components/NumberBtn.js","components/OperationBtn.js","components/BackspaceBtn.js","components/AllClearBtn.js","components/NeutralBtn.js","components/DecimalPointBtn.js","components/Calculator.js","containers/Calculator.js","components/History.js","containers/History.js","reducers/calculator.js","reducers/history.js","reducers/index.js","store.js","index.js"],"names":["decimal_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","decimal_js__WEBPACK_IMPORTED_MODULE_0___default","n","replace_expression","expression","replace","counter","str","seq","split","length","isCorrectNumberOfBranckets","__webpack_exports__","lastLetter","slice","isLastLetterArithmeticOperator","test","isLastLetterOpenBrancket","finalExpression","console","log","concat","ans","eval","Decimal","toFixed","toNumber","toExpression","type","payload","operationToExpression","op","numberToExpression","num","restoreExpression","addHistoryItem","result","calculateResult","backspaceExpression","allClear","addDecimalPoint","NumBtn","_ref","onClick","react_default","a","createElement","OperationBtn","display","BackspaceBtn","AllClearBtn","NeutralBtn","DecimalPointBtn","Calculator","calculator","actions","currentExpression","displayResult","disabled","value","id","components_AllClearBtn","components_OperationBtn","NumberBtn","components_BackspaceBtn","components_DecimalPointBtn","components_NeutralBtn","connect","state","dispatch","bindActionCreators","History","_ref$list","list","map","item","index","key","history","hasNeutral","includes","getDecimalDisplay","currentNumber","getCurrentNumber","revercedExpression","reverse","currentNumberArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","unshift","err","return","Number","join","INITIAL_STATE","currentResult","DEFAULT_STATE","combineReducers","arguments","action","String","Object","objectSpread","checkAndReplaceDicimalPoint","addtionalLetter","isAddtionalLetterArithmeticOperator","toString","addOperationToExpression","lastIndexOf","toConsumableArray","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","containers_Calculator","containers_History","Component","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.310f6071.chunk.js","sourcesContent":["import Decimal from \"decimal.js\";\n\nconst replace_expression = expression => {\n  return expression\n    .replace(/=\\s*$/, \"\")\n    .replace(\"ร\", \"*\")\n    .replace(\"รท\", \"/\");\n};\n\nconst counter = (str, seq) => {\n  return str.split(seq).length - 1;\n};\n\nconst isCorrectNumberOfBranckets = expression => {\n  const numberOfOpenBrancket = counter(expression, \"(\");\n  const numberOfCloseBrancket = counter(expression, \")\");\n  return numberOfOpenBrancket === numberOfCloseBrancket;\n};\n\nexport default expression => {\n  const lastLetter = expression.slice(-1);\n  const isLastLetterArithmeticOperator = /[รทร+-]/.test(lastLetter);\n  const isLastLetterOpenBrancket = /\\(/.test(lastLetter);\n\n  let finalExpression = expression;\n  // \"(\"ใชใ่จ็ฎใงใใชใใใreturnใใ\n  if (isLastLetterOpenBrancket || expression === \"\") {\n    return \"\";\n  }\n\n  if (isLastLetterArithmeticOperator) {\n    finalExpression = expression.slice(0, -1);\n  }\n  console.log(`finalExpression: ${finalExpression}`); // ใใๆฎใ\n  if (isCorrectNumberOfBranckets(expression)) {\n    const ans = eval(replace_expression(finalExpression));\n    // Decimalใฏๅฐๆฐ็นใฎ่จ็ฎใงใฏใชใใๆดๆฐใฎใจใใๅฐๆฐ็นไปฅไธใฎ0ใ่กจ็คบใใชใใใใซใใใใใซไฝฟใฃใฆใใใ\n    return new Decimal(ans.toFixed(3)).toNumber();\n  } else {\n    return \"\";\n  }\n};\n","import * as actionTypes from \"../utils/actionTypes\";\nimport calculateResult from \"../utils/calculateResult\";\n\nexport const toExpression = (type, payload) => ({\n  type,\n  payload\n});\n\nexport const operationToExpression = op =>\n  toExpression(actionTypes.ADD_OPERATION, op);\n\nexport const numberToExpression = num =>\n  toExpression(actionTypes.ADD_NUMBER, num);\n\nexport const restoreExpression = payload => ({\n  type: actionTypes.RESTORE_EXPRESSION,\n  payload\n});\n\nexport const addHistoryItem = expression => ({\n  type: actionTypes.ADD_HISTORY_ITEM,\n  payload: {\n    expression,\n    result: calculateResult(expression)\n  }\n});\n\nexport const backspaceExpression = () => ({\n  type: actionTypes.BACKSPACE_EXPRESSION\n});\n\nexport const allClear = () => ({\n  type: actionTypes.ALL_CLEAR\n});\n\nexport const addDecimalPoint = () => ({\n  type: actionTypes.ADD_DECIMAL_POINT\n});\n","export const ADD_OPERATION = \"ADD_OPERATION\";\nexport const ADD_NUMBER = \"ADD_NUMBER\";\nexport const RESTORE_EXPRESSION = \"RESTORE_EXPRESSION\";\nexport const ADD_HISTORY_ITEM = \"ADD_HISTORY_ITEM\";\nexport const BACKSPACE_EXPRESSION = \"BACKSPACE_EXPRESSION;\";\nexport const ADD_DECIMAL_POINT = \"ADD_DECIMAL_POINT\";\nexport const ALL_CLEAR = \"ALL_CLEAR\";\n","import React from \"react\";\n\nconst NumBtn = ({ n, onClick }) => {\n  return <button onClick={onClick}>{n}</button>;\n};\n\nexport default NumBtn;\n","import React from \"react\";\n\nconst OperationBtn = ({ display, onClick }) => {\n  return <button onClick={onClick}>{display}</button>;\n};\n\nexport default OperationBtn;\n","import React from \"react\";\n\nconst BackspaceBtn = ({ onClick }) => {\n  return <button onClick={onClick}>โ</button>;\n};\n\nexport default BackspaceBtn;\n","import React from \"react\";\n\nconst AllClearBtn = ({ onClick }) => {\n  return <button onClick={onClick}>AC</button>;\n};\n\nexport default AllClearBtn;\n","import React from \"react\";\n\nconst NeutralBtn = ({ onClick }) => {\n  return <button onClick={onClick}>=</button>;\n};\n\nexport default NeutralBtn;\n","import React from \"react\";\n\nconst DecimalPointBtn = ({ onClick }) => {\n  return <button onClick={onClick}>.</button>;\n};\n\nexport default DecimalPointBtn;\n","import React from \"react\";\nimport NumberBtn from \"./NumberBtn\";\nimport OperationBtn from \"./OperationBtn\";\nimport BackspaceBtn from \"./BackspaceBtn\";\nimport AllClearBtn from \"./AllClearBtn\";\nimport NeutralBtn from \"./NeutralBtn\";\nimport DecimalPointBtn from \"./DecimalPointBtn\";\n\nconst Calculator = ({ calculator, actions }) => {\n  const { currentExpression, displayResult } = calculator;\n  return (\n    <fieldset>\n      <legend>Calculator</legend>\n      <div>\n        <input disabled=\"disabled\" value={currentExpression} />\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          disabled=\"disabled\"\n          value={displayResult}\n          id=\"display-field\"\n        />\n      </div>\n\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <AllClearBtn onClick={() => actions.allClear()} />\n            </td>\n            <td>\n              <OperationBtn\n                display={\"(\"}\n                onClick={() => actions.operationToExpression(\"(\")}\n              />\n            </td>\n            <td>\n              <OperationBtn\n                display={\")\"}\n                onClick={() => actions.operationToExpression(\")\")}\n              />\n            </td>\n            <td>\n              <OperationBtn\n                display={\"รท\"}\n                onClick={() => actions.operationToExpression(\"รท\")}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <NumberBtn n={7} onClick={() => actions.numberToExpression(7)} />\n            </td>\n            <td>\n              <NumberBtn n={8} onClick={() => actions.numberToExpression(8)} />\n            </td>\n            <td>\n              <NumberBtn n={9} onClick={() => actions.numberToExpression(9)} />\n            </td>\n            <td>\n              <OperationBtn\n                display={\"ร\"}\n                onClick={() => actions.operationToExpression(\"ร\")}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <NumberBtn n={4} onClick={() => actions.numberToExpression(4)} />\n            </td>\n            <td>\n              <NumberBtn n={5} onClick={() => actions.numberToExpression(5)} />\n            </td>\n            <td>\n              <NumberBtn n={6} onClick={() => actions.numberToExpression(6)} />\n            </td>\n            <td>\n              <OperationBtn\n                display={\"-\"}\n                onClick={() => actions.operationToExpression(\"-\")}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <NumberBtn n={1} onClick={() => actions.numberToExpression(1)} />\n            </td>\n            <td>\n              <NumberBtn n={2} onClick={() => actions.numberToExpression(2)} />\n            </td>\n            <td>\n              <NumberBtn n={3} onClick={() => actions.numberToExpression(3)} />\n            </td>\n            <td>\n              <OperationBtn\n                display={\"+\"}\n                onClick={() => actions.operationToExpression(\"+\")}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <BackspaceBtn onClick={actions.backspaceExpression} />\n            </td>\n            <td>\n              <NumberBtn n={0} onClick={() => actions.numberToExpression(0)} />\n            </td>\n            <td>\n              <DecimalPointBtn onClick={() => actions.addDecimalPoint()} />\n            </td>\n            <td>\n              <NeutralBtn\n                onClick={() => actions.addHistoryItem(currentExpression)}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <br />\n    </fieldset>\n  );\n};\n\nexport default Calculator;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions\";\nimport Calculator from \"../components/Calculator\";\n\nconst mapStateToProps = state => ({\n  calculator: state.calculator\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Calculator);\n","import React from \"react\";\n\nconst History = ({ list = [], actions }) => {\n  return (\n    <fieldset>\n      <legend>History:</legend>\n      <ul>\n        {list.map((item, index) => (\n          <li\n            key={index}\n            onClick={() => actions.restoreExpression(item.expression)}\n          >\n            {item.expression} = {item.result}\n          </li>\n        ))}\n      </ul>\n    </fieldset>\n  );\n};\n\nexport default History;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions\";\nimport History from \"../components/History\";\n\nconst mapStateToProps = state => ({\n  list: state.history\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(History);\n","import * as actionTypes from \"../utils/actionTypes\";\nimport calculateResult from \"../utils/calculateResult\";\n\nconst hasNeutral = expression => {\n  return expression.includes(\"=\");\n};\n\nconst checkAndReplaceDicimalPoint = expression => {\n  if (hasNeutral(expression)) {\n    return \"0.\";\n  } else {\n    const lastLetter = expression.slice(-1);\n    if (/[.]/.test(lastLetter)) {\n      return expression;\n    } else if (!/[\\d]/.test(lastLetter)) {\n      return expression + \"0.\";\n    } else {\n      return expression + \".\";\n    }\n  }\n};\n\nconst addOperationToExpression = (expression, addtionalLetter) => {\n  const lastLetter = expression.slice(-1);\n  // const isLastLetterNumber = /[\\d]/.test(lastLetter);\n  // const isAdditionalLetterBracket = /[()]/.test(addtionalLetter);\n  const isLastLetterArithmeticOperator = /[รทร+-]/.test(lastLetter); // ArithmeticOperator: ๅๅๆผ็ฎๅญ\n  const isAddtionalLetterArithmeticOperator = /[รทร+-]/.test(addtionalLetter);\n  if (hasNeutral(expression)) {\n    if (isAddtionalLetterArithmeticOperator) {\n      return getCurrentNumber(expression).toString() + addtionalLetter;\n    } else {\n      return getCurrentNumber(expression).toString();\n    }\n  } else if (\n    isLastLetterArithmeticOperator &&\n    isAddtionalLetterArithmeticOperator\n  ) {\n    return expression.slice(0, -1) + addtionalLetter;\n  } else {\n    return expression + addtionalLetter;\n  }\n};\n\n// @return [String]\nconst getDecimalDisplay = (expression, currentNumber) => {\n  const lastLetter = expression.slice(-1);\n  if (/[.]/.test(lastLetter)) {\n    return currentNumber + \".\";\n  } else if (!/[\\d]/.test(lastLetter)) {\n    return \"0.\";\n  } else {\n    return currentNumber + \".\";\n  }\n};\n\nconst getCurrentNumber = expression => {\n  const isLastLetterNumber = /[\\d.]/.test(expression.slice(-1));\n  if (!isLastLetterNumber) {\n    return \"\";\n  }\n  const revercedExpression = expression.split(\"\").reverse();\n  let currentNumberArray = [];\n  for (let str of revercedExpression) {\n    if (!/[\\d.]/.test(str)) {\n      break;\n    }\n    currentNumberArray.unshift(str);\n  }\n  return Number(currentNumberArray.join(\"\"));\n};\n\nconst backspaceExpression = expression => {\n  if (hasNeutral(expression)) {\n    return expression.slice(0, expression.lastIndexOf(\"=\"));\n  } else {\n    return expression.slice(0, -1);\n  }\n};\n\nconst INITIAL_STATE = {\n  currentExpression: \"\",\n  currentNumber: 0,\n  currentResult: 0,\n  displayResult: \"\"\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  let expression = \"\";\n  let currentNumber = 0;\n  let currentResult = 0;\n\n  switch (action.type) {\n    case actionTypes.ADD_NUMBER:\n      if (hasNeutral(state.currentExpression)) {\n        expression = String(action.payload);\n      } else {\n        expression = state.currentExpression + action.payload;\n      }\n      currentNumber = getCurrentNumber(expression);\n      return {\n        ...state,\n        currentExpression: expression,\n        currentNumber: currentNumber,\n        displayResult: currentNumber\n      };\n\n    case actionTypes.ADD_DECIMAL_POINT:\n      expression = checkAndReplaceDicimalPoint(state.currentExpression);\n      return {\n        ...state,\n        currentExpression: expression,\n        displayResult: getDecimalDisplay(\n          state.currentExpression,\n          state.currentNumber\n        )\n      };\n\n    case actionTypes.ADD_OPERATION:\n      console.log(state.currentNumber);\n      expression = addOperationToExpression(\n        state.currentExpression,\n        action.payload\n      );\n      currentResult = calculateResult(expression);\n      return {\n        ...state,\n        currentExpression: expression,\n        currentNumber: 0,\n        currentResult: currentResult,\n        displayResult: currentResult\n      };\n\n    case actionTypes.ADD_HISTORY_ITEM:\n      currentResult = calculateResult(state.currentExpression).toString();\n      return {\n        ...state,\n        currentExpression: state.currentExpression + \"=\" + currentResult,\n        currentNumber: currentResult,\n        currentResult: currentResult,\n        displayResult: currentResult\n      };\n\n    case actionTypes.BACKSPACE_EXPRESSION:\n      expression = backspaceExpression(state.currentExpression);\n      return {\n        ...state,\n        currentExpression: expression,\n        currentResult: calculateResult(expression),\n        currentNumber: getCurrentNumber(expression),\n        displayResult: calculateResult(expression)\n      };\n\n    case actionTypes.ALL_CLEAR:\n      return INITIAL_STATE;\n\n    case actionTypes.RESTORE_EXPRESSION:\n      expression = action.payload;\n      currentResult = calculateResult(expression);\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from \"../utils/actionTypes\";\n\nconst DEFAULT_STATE = [];\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_HISTORY_ITEM: {\n      return [...state, action.payload];\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport calculator from \"./calculator\";\nimport history from \"./history\";\n\nexport default combineReducers({\n  calculator,\n  history\n});\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nexport default createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./style.css\";\n\nimport Calculator from \"./containers/Calculator\";\nimport History from \"./containers/History\";\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Calculator />\n        <History />\n      </div>\n    );\n  }\n}\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}